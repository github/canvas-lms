# this config file is useful if you don't want to run a consul
# cluster with canvas.  Just provide the config data you would
# like for the DynamicSettings class to find, and it will use
# it whenever a call for consul data is issued. Data should be
# shaped like the example below, one key for the related set of data,
# and a hash of key/value pairs (no nesting)
development:
  # tree
  config:
    # service
    canvas:
      # prefix
      address-book:
        app-host: "http://address-book.docker"
        secret: "opensesame"
      canvas:
        encryption-secret: "astringthatisactually32byteslong"
        signing-secret: "astringthatisactually32byteslong"
      live-events:
        aws_endpoint: http://kinesis.canvaslms.docker
        kinesis_stream_name: live-events
        aws_access_key_id: key
        aws_secret_access_key_dec: secret
        # stub_credentials: true # can be used in dev to print creds to stdout
      live-events-subscription-service:
        app-host: "http://les.docker"
        sad-panda: null
      math-man:
        base_url: "http://mathman.docker"
        use_for_svg: "false"
        use_for_mml: "false"
      microsoft-sync:
        client-id: some_client_id
        client-secret: some_client_secret
      rich-content-service:
        app-host: "http://rce.canvas.docker:3000"
    # another service
    inst-fs:
      app-host: "http://api.instfs.docker"
      # this is just "super-sekret-value", base64-encoded:
      secret: "c3VwZXItc2VrcmV0LXZhbHVlCg=="
    pandata:
      ios-pandata-key: IOS_pandata_key
      ios-pandata-secret: teamrocketblastoffatthespeedoflight
      android-pandata-key: ANDROID_pandata_key
      android-pandata-secret: surrendernoworpreparetofight
  store:
    canvas:
      lti-keys:
        # these are all the same JWK but with different kid
        # to generate a new key, run the following in a Canvas console:
        #
        # key = OpenSSL::PKey::RSA.generate(2048)
        # key.public_key.to_jwk(kid: Time.now.utc.iso8601).to_json
        jwk-past.json: '{"kty":"RSA","e":"AQAB","n":"oXDpmBX06dF3tCBt_HWD4i-S57-PyZ3hqI-GyTQmJpPIq-btrFCFIWz7s7fWmzUNySQ0HC-OKgjM6IXyniYDXrYL1yi4aXHs-Ben1P1K1EmF2YY7P32JQK00129WiUBmLd_4AqrhQ6Llp4RtH8KPrD8QPicXimPoy2sPrCNpuow7XzTCQQTFAWLKX4YkUgT2673q3FuHxFBtMOYJCg77MXP_utnwjjGrJGtUAb6hFqwgU-y_ZZJ3ET0vTyzc1ccAnO8FHg_Se7VMPQ9LFG_VEDqLvrbeVSxyz1TONHOAgzhV-wvhzR1GoF9twBKSlEJAShJHBNQRJsadhBBMEkdmJQ","kid":"1","d":"VLtrjwwvIC11k0_WCkQvdR6dDw9my14XGx5BkwbQ4zx7fWXV5rPYPAP0U44wkAOXebOLuiNnjT5TNdNf1IuFB0erDUFtEMLfqhLYXpyWkrcIDnQ6Uodz60M9Ubk5BQ6M0pUTmWrQkmxD9tk1YQ7_01rCDqz72QG5JFLLxgBMNMEhxuIlaPWJ_wppnmA9SYEgrLw2P6CqGsRHlsgbZr4T4FuuMqjf-kEISODZxT3b3o56KUVKPbvliwpnCbNBVnNtk78vofTQG-dmClG5y680NMCxE5H5nGq5_pZBgwuIkiUSjBfHrVeNKAjKgr2PkiXpfjV50K8kPH-wVGpRwhxWPQ","p":"0TmzVCkixtd-8TOXcrH5RskqP1NxViwGhITtkIq4klgT48xImpd_0lABTh36DBnPPQJ-Kr_r2X-MKmnVZOgrHnrgpnVfcyXQ-U6ygXKDlXyrj8p30ciSQ8RJbNbDilOpl97aOMMptpR1M7Cl0OLmZ2Cs85EaDT6h9ZLUD4c22YM","q":"xYhwfwRLYvQGileVch7CPI-1CtosO60f97o9ee1wPs-CjIUISsi2_kI_7GBIqdLcuAjKKhPdrjnVQ3jCvpjTWiZOvLlITaWTN0T3GYoorq2yh-iVX5MvtzGvITOsjkxVPnwYgZ9X3Jag-yMnhimPJM1UkLXNMfifGBIFrJZFuTc","dp":"k225M4CZBMwsowHbofJO2NY_csf1gOcc4JxaWhOl41k1CruUHXrLkwLVKJpu67_0C-WJyc3a_zOlLO3OdIA0ghHL4v-p9pWbH1GY7yYmGlvy-CuPKr_OcPoLUyoyN3KkemOKGZ1L81_BBl9fOEXqXMX-mNKSLOsJbOW9kAOTXsk","dq":"YZ0VCo-SuWmhuceiQGzWy5qwepZp-WuKOp88Nf6R01g0SUCMYnhhhbAzapoCDnn3PLKLRNPgXnKR4u_QPOPEve3kRvrAsi46W7um6GYPyJJpgSP8fOh9UegphRzGDuPF1ET6z0Nw5b9B-hjbNT9gT21wdrqAlksoQ3rUdv8joW0","qi":"s3Zv9m_sUnR_87cT7zlXdKJ1JVlbiykHB6XDY1ydJaaxVmpeYnIo65OU6pI7UMgaKvkTUbeUvU_1qCJT9l_i53Dcy9csIQzx9Fd5UIaDapfpH8grG8L8jWuK1tylgiNkacyEBKq5Vra3XvcOfS26E8ep_NDpMAL_K8ah1tfjA2s"}'
        jwk-present.json: '{"kty":"RSA","e":"AQAB","n":"oXDpmBX06dF3tCBt_HWD4i-S57-PyZ3hqI-GyTQmJpPIq-btrFCFIWz7s7fWmzUNySQ0HC-OKgjM6IXyniYDXrYL1yi4aXHs-Ben1P1K1EmF2YY7P32JQK00129WiUBmLd_4AqrhQ6Llp4RtH8KPrD8QPicXimPoy2sPrCNpuow7XzTCQQTFAWLKX4YkUgT2673q3FuHxFBtMOYJCg77MXP_utnwjjGrJGtUAb6hFqwgU-y_ZZJ3ET0vTyzc1ccAnO8FHg_Se7VMPQ9LFG_VEDqLvrbeVSxyz1TONHOAgzhV-wvhzR1GoF9twBKSlEJAShJHBNQRJsadhBBMEkdmJQ","kid":"2","d":"VLtrjwwvIC11k0_WCkQvdR6dDw9my14XGx5BkwbQ4zx7fWXV5rPYPAP0U44wkAOXebOLuiNnjT5TNdNf1IuFB0erDUFtEMLfqhLYXpyWkrcIDnQ6Uodz60M9Ubk5BQ6M0pUTmWrQkmxD9tk1YQ7_01rCDqz72QG5JFLLxgBMNMEhxuIlaPWJ_wppnmA9SYEgrLw2P6CqGsRHlsgbZr4T4FuuMqjf-kEISODZxT3b3o56KUVKPbvliwpnCbNBVnNtk78vofTQG-dmClG5y680NMCxE5H5nGq5_pZBgwuIkiUSjBfHrVeNKAjKgr2PkiXpfjV50K8kPH-wVGpRwhxWPQ","p":"0TmzVCkixtd-8TOXcrH5RskqP1NxViwGhITtkIq4klgT48xImpd_0lABTh36DBnPPQJ-Kr_r2X-MKmnVZOgrHnrgpnVfcyXQ-U6ygXKDlXyrj8p30ciSQ8RJbNbDilOpl97aOMMptpR1M7Cl0OLmZ2Cs85EaDT6h9ZLUD4c22YM","q":"xYhwfwRLYvQGileVch7CPI-1CtosO60f97o9ee1wPs-CjIUISsi2_kI_7GBIqdLcuAjKKhPdrjnVQ3jCvpjTWiZOvLlITaWTN0T3GYoorq2yh-iVX5MvtzGvITOsjkxVPnwYgZ9X3Jag-yMnhimPJM1UkLXNMfifGBIFrJZFuTc","dp":"k225M4CZBMwsowHbofJO2NY_csf1gOcc4JxaWhOl41k1CruUHXrLkwLVKJpu67_0C-WJyc3a_zOlLO3OdIA0ghHL4v-p9pWbH1GY7yYmGlvy-CuPKr_OcPoLUyoyN3KkemOKGZ1L81_BBl9fOEXqXMX-mNKSLOsJbOW9kAOTXsk","dq":"YZ0VCo-SuWmhuceiQGzWy5qwepZp-WuKOp88Nf6R01g0SUCMYnhhhbAzapoCDnn3PLKLRNPgXnKR4u_QPOPEve3kRvrAsi46W7um6GYPyJJpgSP8fOh9UegphRzGDuPF1ET6z0Nw5b9B-hjbNT9gT21wdrqAlksoQ3rUdv8joW0","qi":"s3Zv9m_sUnR_87cT7zlXdKJ1JVlbiykHB6XDY1ydJaaxVmpeYnIo65OU6pI7UMgaKvkTUbeUvU_1qCJT9l_i53Dcy9csIQzx9Fd5UIaDapfpH8grG8L8jWuK1tylgiNkacyEBKq5Vra3XvcOfS26E8ep_NDpMAL_K8ah1tfjA2s"}'
        jwk-future.json: '{"kty":"RSA","e":"AQAB","n":"oXDpmBX06dF3tCBt_HWD4i-S57-PyZ3hqI-GyTQmJpPIq-btrFCFIWz7s7fWmzUNySQ0HC-OKgjM6IXyniYDXrYL1yi4aXHs-Ben1P1K1EmF2YY7P32JQK00129WiUBmLd_4AqrhQ6Llp4RtH8KPrD8QPicXimPoy2sPrCNpuow7XzTCQQTFAWLKX4YkUgT2673q3FuHxFBtMOYJCg77MXP_utnwjjGrJGtUAb6hFqwgU-y_ZZJ3ET0vTyzc1ccAnO8FHg_Se7VMPQ9LFG_VEDqLvrbeVSxyz1TONHOAgzhV-wvhzR1GoF9twBKSlEJAShJHBNQRJsadhBBMEkdmJQ","kid":"3","d":"VLtrjwwvIC11k0_WCkQvdR6dDw9my14XGx5BkwbQ4zx7fWXV5rPYPAP0U44wkAOXebOLuiNnjT5TNdNf1IuFB0erDUFtEMLfqhLYXpyWkrcIDnQ6Uodz60M9Ubk5BQ6M0pUTmWrQkmxD9tk1YQ7_01rCDqz72QG5JFLLxgBMNMEhxuIlaPWJ_wppnmA9SYEgrLw2P6CqGsRHlsgbZr4T4FuuMqjf-kEISODZxT3b3o56KUVKPbvliwpnCbNBVnNtk78vofTQG-dmClG5y680NMCxE5H5nGq5_pZBgwuIkiUSjBfHrVeNKAjKgr2PkiXpfjV50K8kPH-wVGpRwhxWPQ","p":"0TmzVCkixtd-8TOXcrH5RskqP1NxViwGhITtkIq4klgT48xImpd_0lABTh36DBnPPQJ-Kr_r2X-MKmnVZOgrHnrgpnVfcyXQ-U6ygXKDlXyrj8p30ciSQ8RJbNbDilOpl97aOMMptpR1M7Cl0OLmZ2Cs85EaDT6h9ZLUD4c22YM","q":"xYhwfwRLYvQGileVch7CPI-1CtosO60f97o9ee1wPs-CjIUISsi2_kI_7GBIqdLcuAjKKhPdrjnVQ3jCvpjTWiZOvLlITaWTN0T3GYoorq2yh-iVX5MvtzGvITOsjkxVPnwYgZ9X3Jag-yMnhimPJM1UkLXNMfifGBIFrJZFuTc","dp":"k225M4CZBMwsowHbofJO2NY_csf1gOcc4JxaWhOl41k1CruUHXrLkwLVKJpu67_0C-WJyc3a_zOlLO3OdIA0ghHL4v-p9pWbH1GY7yYmGlvy-CuPKr_OcPoLUyoyN3KkemOKGZ1L81_BBl9fOEXqXMX-mNKSLOsJbOW9kAOTXsk","dq":"YZ0VCo-SuWmhuceiQGzWy5qwepZp-WuKOp88Nf6R01g0SUCMYnhhhbAzapoCDnn3PLKLRNPgXnKR4u_QPOPEve3kRvrAsi46W7um6GYPyJJpgSP8fOh9UegphRzGDuPF1ET6z0Nw5b9B-hjbNT9gT21wdrqAlksoQ3rUdv8joW0","qi":"s3Zv9m_sUnR_87cT7zlXdKJ1JVlbiykHB6XDY1ydJaaxVmpeYnIo65OU6pI7UMgaKvkTUbeUvU_1qCJT9l_i53Dcy9csIQzx9Fd5UIaDapfpH8grG8L8jWuK1tylgiNkacyEBKq5Vra3XvcOfS26E8ep_NDpMAL_K8ah1tfjA2s"}'
  privatehttps://classroom.github.com/lti1p3/openid-connect/redirect
:
    canvas:
      # api_gateway_enabled: 'true'
      # api_gateway_uri: 'http://inst-gateway.docker/graphql'
      auditors.yml: |
        write_paths:
          - active_record
        read_path: active_record
      datadog_apm.yml: |
        sample_rate: 0.0
        host_sample_rate: 0.0
